#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define TAM 5
#define T_PROD 20
#define T_VEND 20

int cont_cli = 0;
int cont_func = 0;
int cont_prod = 0;
int cont_vend = 0;

// Estrutura para Cliente
typedef struct Cliente {
	int codigo_cliente;
	char nome_cliente[100];
	char telefone[15];
} Cliente;

// Estrutura para Produto
typedef struct Produto {
	int codigo_produto;
	char nome_produto[100];
	int quantidade_estoque;
	float valor_produto;
} Produto;

// Estrutura para Vendedor
typedef struct Vendedor {
	int codigo_vendedor;
	char nome_vendedor[100];
	char telefone[15];
} Vendedor;

// Estrutura para Venda
typedef struct Venda {
	int codigo_cliente;
	int codigo_produto;
	int codigo_vendedor;
	char nome_produto[100];
	int quantidade_vendida;
	float valor_venda;
} Venda;


int menu();
void cadastro_cli(Cliente cli[]);
void exclui_cli(Cliente cli[]);
void cadastro_prod(Produto prod[]);
void cad_vendedor(Vendedor func[]);
void exclui_vendedor(Vendedor func[]);
void realizar_venda(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[]);
void menu_exclusao(Cliente cli[], Vendedor func[]);
void menu_relatorios(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[]);
void relatorio_venda_cliente(Cliente cli[], Venda vend[]);
void relatorio_venda_vendedor(Vendedor func[], Venda vend[]);
void relatorio_venda_produto(Produto prod[], Venda vend[]);

int main()
{
	struct Cliente cli[TAM];
	struct Vendedor func[TAM];
	struct Produto prod[T_PROD];
	struct Venda vend[T_VEND];

	int op;
	do
	{
		op = menu();
		if(op == 1)
			cadastro_cli(cli);
		else if(op == 2)
			cad_vendedor(func);
		else if(op == 3)
			cadastro_prod(prod);
		else if(op == 4)
		    realizar_venda(cli, prod, func, vend);
		else if(op == 5)
			menu_exclusao(cli, func);
        else if(op == 6)
            menu_relatorios(cli, prod, func, vend);
                
	} while(op != 7);
}

int menu()
{
	int m, flag = 0;
	do
	{
		printf("\n==== MENU PRINCIPAL ====");
		printf("\n1 - Cadastrar Clientes");
		printf("\n2 - Cadastrar Vendedor");
		printf("\n3 - Cadastrar Produto");
		printf("\n4 - Realizar Venda");
		printf("\n5 - ---> Menu de Exclusão");
		printf("\n6 - ---> Menu de Relatórios");
		printf("\n7 - Sair");
		if(flag == 0)
		{
			printf("\nDigite a opcao: ");
			scanf("%d", &m);
			flag = 1;
		}
		else
		{
			printf("\nOpcao invalida! Digite novamente: ");
			scanf("%d", &m);
		}
	} while(m < 1 || m > 7);
	return m;
}

void menu_exclusao(Cliente cli[], Vendedor func[]) {
    int sub_op;
    do {
        printf("\n==== Menu de Exclusão ====");
        printf("\n1 - Excluir Cliente");
        printf("\n2 - Excluir Vendedor");
        printf("\n3 - Voltar ao Menu Principal");
        printf("\nDigite a opcao: ");
        scanf("%d", &sub_op);

        if (sub_op == 1) 
            exclui_cli(cli);
        else if (sub_op == 2)
            exclui_vendedor(func);
        else if (sub_op == 3)
            printf("\nVoltando ao Menu Principal...\n");
        else 
            printf("\nOpcao invalida! Digite novamente.\n");
        
    } while (sub_op != 3);
}

void menu_relatorios(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[])
{
    int sub_op;
    do {
        printf("\n==== Menu de Relatórios ====");
        printf("\n1 - Relatório de Venda por Produto");
        printf("\n2 - Relatório de Venda por Vendedor");
        printf("\n3 - Relatório de Venda por Cliente");
        printf("\n4 - Voltar ao Menu Principal");
        printf("\nDigite a opcao: ");
        scanf("%d", &sub_op);

        if (sub_op == 1) 
            relatorio_venda_produto(prod, vend);
        else if (sub_op == 2)
            relatorio_venda_vendedor(func, vend);
        else if (sub_op == 3)
            relatorio_venda_cliente(cli, vend);
        else if (sub_op == 4)
            printf("\nVoltando ao Menu Principal...\n");
        else 
            printf("\nOpcao invalida! Digite novamente.\n");
        
    } while (sub_op != 4);
}


void cadastro_cli(Cliente cli[])
{
    int codigo, i, achou = 0;

    printf("Digite o Código do Cliente: ");
    setbuf(stdin, NULL);
    scanf("%d", &codigo);

    for (i = 0; i < cont_cli; i++) {
        if (codigo == cli[i].codigo_cliente) {
            printf("Código de cliente já existe.\n");
            achou = 1;
            break;
        }
    }

    if (!achou) {
        cli[cont_cli].codigo_cliente = codigo;

        printf("Digite o Nome do Cliente: ");
        setbuf(stdin, NULL);
        fgets(cli[cont_cli].nome_cliente, sizeof(cli[cont_cli].nome_cliente), stdin);
        

        printf("Digite o Telefone do Cliente: ");
        setbuf(stdin, NULL);
        fgets(cli[cont_cli].telefone, sizeof(cli[cont_cli].telefone), stdin);
        
        cont_cli++;
        printf("Cliente cadastrado com sucesso!\n");
    }
}
void exclui_cli(Cliente cli[])
{
	printf("Deu certo exc cli");
}
void cadastro_prod(Produto prod[])
{
    int codigo, i, achou = 0;
    float valor;
    int quantidade;

    printf("Digite o Código do Produto: ");
    setbuf(stdin, NULL);
    scanf("%d", &codigo);

    for (i = 0; i < cont_prod; i++) {
        if (codigo == prod[i].codigo_produto) {
            printf("Código de produto já existe.\n");
            achou = 1;
            break;
        }
    }

    if (!achou) {
        prod[cont_prod].codigo_produto = codigo;

        printf("Digite o Nome do Produto: ");
        setbuf(stdin, NULL);
        fgets(prod[cont_prod].nome_produto, sizeof(prod[cont_prod].nome_produto), stdin);
        

        printf("Digite a Quantidade em Estoque: ");
        scanf("%d", &prod[cont_prod].quantidade_estoque);

        printf("Digite o Valor do Produto: ");
        scanf("%f", &prod[cont_prod].valor_produto);


        //prod[cont_prod].quantidade_estoque = quantidade;
        //prod[cont_prod].valor_produto = valor;

        cont_prod++;
        printf("Produto cadastrado com sucesso!\n");
    }
}
void cad_vendedor(Vendedor func[])
{
    int codigo, i, achou = 0;

    printf("Digite o Código do Vendedor: ");
    setbuf(stdin, NULL);
    scanf("%d", &codigo);

    
    for (i = 0; i < cont_func; i++) {
        if (codigo == func[i].codigo_vendedor) {
            printf("Código de vendedor já existe.\n");
            achou = 1;
            break;
        }
    }

    if (!achou) {
        func[cont_func].codigo_vendedor = codigo;

        printf("Digite o Nome do Vendedor: ");
        setbuf(stdin, NULL);
        fgets(func[cont_func].nome_vendedor, sizeof(func[cont_func].nome_vendedor), stdin);
        
        printf("Digite o Telefone do Vendedor: ");
        setbuf(stdin, NULL);
        fgets(func[cont_func].telefone, sizeof(func[cont_func].telefone), stdin);
        
        cont_func++;
        printf("Vendedor cadastrado com sucesso!\n");
    }

}
void exclui_vendedor(Vendedor func[])
{
	printf("Deu certo exc vend");
}

void realizar_venda(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[]) {
    int codigo_cliente, codigo_produto, codigo_vendedor, quantidade, i;
    int achou_cliente = 0, achou_produto = 0, achou_vendedor = 0;

    
    printf("Digite o código do cliente: ");
    scanf("%d", &codigo_cliente);
    for (i = 0; i < cont_cli; i++) 
    {
        if (cli[i].codigo_cliente == codigo_cliente) 
        {
            achou_cliente = 1;
            break;
        }
    }
    if (!achou_cliente) 
    {
        printf("Cliente não encontrado.\n");
        return;
    }

    
    printf("Digite o código do vendedor: ");
    scanf("%d", &codigo_vendedor);
    for (i = 0; i < cont_func; i++) 
    {
        if (func[i].codigo_vendedor == codigo_vendedor) {
            achou_vendedor = 1;
            break;
        }
    }
    if (!achou_vendedor) {
        printf("Vendedor não encontrado.\n");
        return;
    }

    printf("Digite o código do produto: ");
    scanf("%d", &codigo_produto);
    
    for (i = 0; i < cont_prod; i++) {
        if (prod[i].codigo_produto == codigo_produto) 
        {
            printf("Digite a quantidade a ser vendida: ");
            scanf("%d", &quantidade);
            achou_produto = 1;

            if (quantidade > prod[i].quantidade_estoque) 
            {
                printf("Quantidade indisponível no estoque.\n");
                return;
            }

            prod[i].quantidade_estoque -= quantidade;

            vend[cont_vend].codigo_cliente = codigo_cliente;
            vend[cont_vend].codigo_vendedor = codigo_vendedor;
            vend[cont_vend].codigo_produto = codigo_produto;
            strcpy(vend[cont_vend].nome_produto, prod[i].nome_produto);
            vend[cont_vend].quantidade_vendida = quantidade;
            vend[cont_vend].valor_venda = quantidade * prod[i].valor_produto;

            cont_vend++;
            printf("Venda realizada com sucesso!\n");
            return;
        }
    }
    if (!achou_produto) 
    {
        printf("Produto não encontrado.\n");
        return;
    }
}


void relatorio_venda_produto(Produto prod[], Venda vend[]) {
    printf("\n==== Relatório de Vendas por Produto ====\n");
    
    if(cont_vend== 0 )
        printf("Nenhuma Venda Realizada");
    else
    {
        for (int i = 0; i < cont_prod; i++) 
        {
            int total_quantidade = 0;
            float total_vendas = 0;
    
            for (int j = 0; j < cont_vend; j++) {
                if (prod[i].codigo_produto == vend[j].codigo_produto) 
                {
                    total_quantidade += vend[j].quantidade_vendida;
                    total_vendas += vend[j].valor_venda;
                }
            }
    
            if (total_quantidade > 0) 
            {
                printf("Produto: %s", prod[i].nome_produto);
                printf("Código: %d | Quantidade Vendida: %d | Total de Vendas: R$ %.2f\n",
                       prod[i].codigo_produto, total_quantidade, total_vendas);
            }
        }
    }
}

void relatorio_venda_vendedor(Vendedor func[], Venda vend[]) {
    printf("\n==== Relatório de Vendas por Vendedor ====\n");
    
   if(cont_vend== 0 )
        printf("Nenhuma Venda Realizada");
    else
    {

        for (int i = 0; i < cont_func; i++) 
        {
            float total_vendas = 0;
    
            for (int j = 0; j < cont_vend; j++) 
            {
                if (func[i].codigo_vendedor == vend[j].codigo_vendedor) {
                    total_vendas += vend[j].valor_venda;
                }
            }
    
            if (total_vendas > 0) {
                printf("Vendedor: %s", func[i].nome_vendedor);
                printf("Código: %d | Total de Vendas: R$ %.2f\n", func[i].codigo_vendedor, total_vendas);
            }
        }
    }
        
}

void relatorio_venda_cliente(Cliente cli[], Venda vend[]) {
    printf("\n==== Relatório de Vendas por Cliente ====\n");
    
   if(cont_vend== 0 )
        printf("Nenhuma Venda Realizada");
    else
    {
        for (int i = 0; i < cont_cli; i++) {
            float total_vendas = 0;
    
            for (int j = 0; j < cont_vend; j++) {
                if (cli[i].codigo_cliente == vend[j].codigo_cliente) {
                    total_vendas += vend[j].valor_venda;
                }
            }
    
            if (total_vendas > 0) {
                printf("Cliente: %s", cli[i].nome_cliente);
                printf("Código: %d | Total de Vendas: R$ %.2f\n", cli[i].codigo_cliente, total_vendas);
            }
        }

    }    
}


