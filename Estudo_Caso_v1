#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define TAM 5
#define T_PROD 20
#define T_VEND 20

int cont_cli = 0;
int cont_func = 0;
int cont_prod = 0;
int cont_vend = 0;

// Estrutura para Cliente
typedef struct Cliente {
	int codigo_cliente;
	char nome_cliente[100];
	char telefone[15];
} Cliente;

// Estrutura para Produto
typedef struct Produto {
	int codigo_produto;
	char nome_produto[100];
	int quantidade_estoque;
	float valor_produto;
} Produto;

// Estrutura para Vendedor
typedef struct Vendedor {
	int codigo_vendedor;
	char nome_vendedor[100];
	char telefone[15];
} Vendedor;

// Estrutura para Venda
typedef struct Venda {
	int codigo_cliente;
	int codigo_produto;
	int codigo_vendedor;
	char nome_produto[100];
	int quantidade_vendida;
	float valor_venda;
} Venda;


int menu();
void cadastro_cli(Cliente cli[]);
void exclui_cli(Cliente cli[]);
void cadastro_prod(Produto prod[]);
void cad_vendedor(Vendedor func[]);
void exclui_vendedor(Vendedor func[]);
void relatorio_venda(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[]);
void menu_exclusao(Cliente cli[], Vendedor func[]);
void menu_relatorios(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[]);

int main()
{
	struct Cliente cli[TAM];
	struct Vendedor func[TAM];
	struct Produto prod[T_PROD];
	struct Venda vend[T_VEND];

	int op;
	do
	{
		op = menu();
		if(op == 1)
			cadastro_cli(cli);
		else if(op == 2)
			cad_vendedor(func);
		else if(op == 3)
			cadastro_prod(prod);
		else if(op == 4)
				menu_exclusao(cli, func);
        else if(op == 5)
                menu_relatorios(cli, prod, func, vend);
                
	} while(op != 6);
}

int menu()
{
	int m, flag = 0;
	do
	{
		printf("\n==== MENU PRINCIPAL ====");
		printf("\n1 - Cadastrar Clientes");
		printf("\n2 - Cadastrar Vendedor");
		printf("\n3 - Cadastrar Produto");
		printf("\n4 - Menu de Exclusão");
		printf("\n5 - Menu de Relatórios");
		printf("\n6 - Sair");
		if(flag == 0)
		{
			printf("\nDigite a opcao: ");
			scanf("%d", &m);
			flag = 1;
		}
		else
		{
			printf("\nOpcao invalida! Digite novamente: ");
			scanf("%d", &m);
		}
	} while(m < 1 || m > 6);
	return m;
}

void menu_exclusao(Cliente cli[], Vendedor func[]) {
    int sub_op;
    do {
        printf("\n==== Menu de Exclusão ====");
        printf("\n1 - Excluir Cliente");
        printf("\n2 - Excluir Vendedor");
        printf("\n3 - Voltar ao Menu Principal");
        printf("\nDigite a opcao: ");
        scanf("%d", &sub_op);

        if (sub_op == 1) 
            exclui_cli(cli);
        else if (sub_op == 2)
            exclui_vendedor(func);
        else if (sub_op == 3)
            printf("\nVoltando ao Menu Principal...\n");
        else 
            printf("\nOpcao invalida! Digite novamente.\n");
        
    } while (sub_op != 3);
}

void menu_relatorios(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[])
{
    int sub_op;
    do {
        printf("\n==== Menu de Relatórios ====");
        printf("\n1 - Relatório de Venda por Produto");
        printf("\n2 - Relatório de Venda por Vendedor");
        printf("\n3 - Relatório de Venda por Cliente");
        printf("\n4 - Voltar ao Menu Principal");
        printf("\nDigite a opcao: ");
        scanf("%d", &sub_op);

        if (sub_op == 1) 
            relatorio_venda(cli, prod, func, vend);
        else if (sub_op == 2)
            relatorio_venda(cli, prod, func, vend);
        else if (sub_op == 3)
            relatorio_venda(cli, prod, func, vend);
        else if (sub_op == 4)
            printf("\nVoltando ao Menu Principal...\n");
        else 
            printf("\nOpcao invalida! Digite novamente.\n");
        
    } while (sub_op != 4);
}


void cadastro_cli(Cliente cli[])
{
	printf("Digite o Código do Cliente: ");
    setbuf(stdin, NULL);
    scanf("%d", &cli[cont_cli].codigo_cliente);

    printf("Digite o Nome do Cliente: ");
    setbuf(stdin, NULL);
    fgets(cli[cont_cli].nome_cliente, sizeof(cli[cont_cli].nome_cliente), stdin);
    
    printf("Digite o telefone do cliente: ");
    setbuf(stdin, NULL);
    fgets(cli[cont_cli].telefone, sizeof(cli[cont_cli].telefone), stdin);
    

    cont_cli++;
    printf("Cliente cadastrado com sucesso!\n");
}
void exclui_cli(Cliente cli[])
{
	printf("Deu certo exc cli");
}
void cadastro_prod(Produto prod[])
{
	printf("Deu certo cad prod");
}
void cad_vendedor(Vendedor func[])
{
	int i, achou=0, codigo;
	printf("Digite o Código do Vendedor: ");
    setbuf(stdin, NULL);
    scanf("%d", &codigo);

   	for (int i = 0; i < cont_func; i++) {
    {
        if (codigo == func[cont_func].codigo_vendedor)
        {
            printf("Código de vendedor já existe.\n");
            achou = 1;
            break;
        }
        if achou ==0)
        {
            printf("Digite o Nome do Vendedor: ");
            setbuf(stdin, NULL);
            fgets(func[cont_func].nome_vendedor, sizeof(func[cont_func].nome_vendedor), stdin);
            
            printf("Digite o Telefone do Vendedor: ");
            setbuf(stdin, NULL);
            fgets(func[cont_func].telefone, sizeof(func[cont_func].telefone), stdin);
            
            cont_func++;
            printf("Vendedor cadastrado com sucesso!\n");
        }

}
void exclui_vendedor(Vendedor func[])
{
	printf("Deu certo exc vend");
}
void relatorio_venda(Cliente cli[], Produto prod[], Vendedor func[], Venda vend[])
{
	printf("Deu certo relarrii");
}
