#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define TAM 5
#define T_PROD 20
#define T_VEND 20

int cadastrados = 0;

// Estrutura para Cliente
typedef struct Cliente {
	int codigo_cliente;
	char nome_cliente[100];
	char telefone[15];
} Cliente;

// Estrutura para Produto
typedef struct Produto {
	int codigo_produto;
	char nome_produto[100];
	int quantidade_estoque;
	float valor_produto;
} Produto;

// Estrutura para Vendedor
typedef struct Vendedor {
	int codigo_vendedor;
	char nome_vendedor[100];
	char telefone[15];
} Vendedor;

// Estrutura para Venda
typedef struct Venda {
	int codigo_cliente;
	int codigo_produto;
	int codigo_vendedor;
	char nome_produto[100];
	int quantidade_vendida;
	float valor_venda;
} Venda;


int menu();
void cadastro_cli(Cliente cli[]);
void exclui_cli(Cliente cli[]);
void cadastro_prod(Produto prod[]);
void cad_vendedor(Vendedor func[]);
void exc_vendedor(Vendedor func[]);
void registro_venda(struct Cliente cli[], Produto prod, Vendedor func[], Venda vend[]);
void menu_exclusao(Cliente cli[], Vendedor func[]);
void menu_relatorios(Venda vend[]);

int main()
{
	struct Cliente a[TAM];
	struct Vendedor b[TAM];
	struct Produto c[T_PROD];
	struct Venda d[T_VEND];

	int op;
	do
	{
		op = menu();
		if(op == 1)
			cadastro_cli(a);
		else if(op == 2)
			cad_vendedor(b);
			else if(op == 3)
			cadastro_prod(c);
			else if(op == 4)
				menu_exclusao(a, b);
            else if(op == 5)
                menu_relatorios(d);
                
			} while(op != 6);
}

int menu()
{
	int m, flag = 0;
	do
	{
		printf("\n==== Menu ====");
		printf("\n1 - Cadastrar Clientes");
		printf("\n2 - Cadastrar Vendedor");
		printf("\n3 - Cadastrar Produto");
		printf("\n4 - Menu de Exclusão");
		printf("\n5 - Menu de Relatórios");
		printf("\n6 - Sair");
		if(flag == 0)
		{
			printf("\nDigite a opcao: ");
			scanf("%d", &m);
			flag = 1;
		}
		else
		{
			printf("\nOpcao invalida! Digite novamente: ");
			scanf("%d", &m);
		}
	} while(m < 1 || m > 5);
	return m;
}

void menu_exclusao(Cliente cli[], Vendedor func[]) {
    int sub_op;
    do {
        printf("\n==== Menu de Exclusão ====");
        printf("\n1 - Excluir Cliente");
        printf("\n2 - Excluir Vendedor");
        printf("\n3 - Voltar ao Menu Principal");
        printf("\nDigite a opcao: ");
        scanf("%d", &sub_op);

        if (sub_op == 1) {
            printf("\nExcluindo Cliente...\n");
            // Lógica para exclusão de cliente
        } else if (sub_op == 2) {
            printf("\nExcluindo Vendedor...\n");
            // Lógica para exclusão de vendedor
        } else if (sub_op == 3) {
            printf("\nVoltando ao Menu Principal...\n");
        } else {
            printf("\nOpcao invalida! Digite novamente.\n");
        }
    } while (sub_op != 3);
}

void menu_relatorios(Venda vend[]) {
    int sub_op;
    do {
        printf("\n==== Menu de Relatórios ====");
        printf("\n1 - Relatório de Venda por Produto");
        printf("\n2 - Relatório de Venda por Vendedor");
        printf("\n3 - Voltar ao Menu Principal");
        printf("\nDigite a opcao: ");
        scanf("%d", &sub_op);

        if (sub_op == 1) {
            printf("\nExibindo Relatório de Venda por Produto...\n");
            // Lógica para relatório de venda por produto
        } else if (sub_op == 2) {
            printf("\nExibindo Relatório de Venda por Vendedor...\n");
            // Lógica para relatório de venda por vendedor
        } else if (sub_op == 3) {
            printf("\nVoltando ao Menu Principal...\n");
        } else {
            printf("\nOpcao invalida! Digite novamente.\n");
        }
    } while (sub_op != 3);
}

void cadastro_cli(struct Cliente[])
{
	printf("Deu certo");
}
void exclui_cli(struct Cliente[])
{
	printf("Deu certo");
}
void cadastro_prod(struct Produto[])
{
	printf("Deu certo");
}
void cad_vendedor(struct Vendedor[])
{
	printf("Deu certo");
}
void exc_vendedor(struct Vendedor[])
{
	printf("Deu certo");
}
void registro_venda(struct Cliente[], Produto[], Vendedor[], Venda[])
{
	printf("Deu certo");
}
